/* TIMELINE DEPENDENT VARIABLES */
$event-padding-small: 1rem;
$event-padding-medium: 1.5rem;
$text-padding-top: 5px;
$thin-line: 1px;
$medium-line: 2px;

/*  SVG MIXINS  */

@mixin pin-size($prop) {
  #{$prop}: 2.5rem;

  @include mq(md) {
    #{$prop}: 4rem;
  }

  @media screen and (min-width: 1024px) and (orientation: landscape),
    (min-width: 1200px) {
    #{$prop}: 2.5rem;
  }
}

@mixin svg-size($prop) {
  #{$prop}: 2rem;

  @include mq(md) {
    #{$prop}: 3rem;
  }

  @media screen and (min-width: 1024px) and (orientation: landscape),
    (min-width: 1200px) {
    #{$prop}: 2rem;
  }
}

.itinerary {
  @include stretch;
  display: grid;
  grid-template-rows: min-content 40% 50%;

  @include mq(md) {
    grid-template-rows: min-content 50% 42%;
  }

  @media screen and (min-width: 1024px) and (orientation: landscape),
    (min-width: 1200px) {
    height: 95%;
    grid-template-rows: min-content 1fr;
    grid-template-columns: 40% 60%;
    grid-template-areas:
      'header header'
      'timeline map';
  }

  @media (min-width: 1600px) {
    grid-template-columns: 35% 65%;
  }

  &__map {
    background: url('/images/photos/map_placeholder.jpg') no-repeat center;
    background-size: cover;
    @include stretch;

    &--container {
      @include stretch;
      margin-bottom: 1rem;

      @include mq(ld) {
        margin-bottom: 2rem;
      }

      @media screen and (min-width: 1024px) and (orientation: landscape),
        (min-width: 1200px) {
        @include stretch;
        grid-area: map;
      }
    }
  }

  &__timeline {
    &--container {
      max-height: 50vh;
      width: 100%;
      overflow-y: scroll;
      margin-top: 1.5rem;

      @media screen and (min-width: 1024px) and (orientation: landscape),
        (min-width: 1200px) {
        @include stretch;
        grid-area: timeline;
        height: 100%;
        max-height: 70vh;
      }
    }
  }

  &__event {
    display: grid;
    grid-template-columns: 25% min-content 1fr;
    padding-bottom: $event-padding-small;

    @include mq(md) {
      padding-bottom: $event-padding-medium;
      grid-template-columns: 18% min-content 1fr;
    }

    @media screen and (min-width: 1024px) and (orientation: landscape),
      (min-width: 1200px) {
      padding-bottom: $event-padding-small;
      grid-template-columns: 22% min-content 1fr;
    }

    &:nth-last-of-type(1) {
      .itinerary__icon:before {
        background-color: red;
      }
    }

    &:last-of-type {
      color: $theme-secondary;
      padding-bottom: 0;

      svg {
        fill: $theme-secondary;
      }
      .itinerary__icon:before {
        display: none;
      }
    }
  }

  &__time {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-end;

    @media screen and (min-width: 1024px) and (orientation: landscape),
      (min-width: 1200px) {
      align-items: flex-start;
    }

    p {
      font-size: 1.2rem;
      word-wrap: normal;
      margin: 3px 0;

      @include mq(md) {
        font-size: 1.6rem;
      }

      &:first-child {
        font-weight: bold;
      }
    }
  }

  &__icon {
    justify-self: center;
    position: relative;
    padding: 0 5px;

    @include mq(md) {
      margin: 0 2rem;
    }

    @media screen and (min-width: 1024px) and (orientation: landscape),
      (min-width: 1200px) {
      margin: 0 5px;
    }

    &:before {
      content: '';
      position: absolute;
      @include pin-size('top');
      left: calc(50% - #{$thin-line});
      width: $thin-line;
      height: calc(100% - 2.5rem + #{$event-padding-small});
      background-color: $gray-dark;

      @include mq(md) {
        left: calc(50% - #{$medium-line}/ 2);
        width: $medium-line;
        height: calc(100% - 4rem + #{$event-padding-medium});
      }

      @media screen and (min-width: 1024px) and (orientation: landscape),
        (min-width: 1200px) {
        left: 50%;
        width: $thin-line;
        height: calc(100% - 2.5rem + #{$event-padding-small});
      }
    }
    svg {
      @include pin-size('width');
      @include pin-size('height');
      fill: $gray-dark;
    }

    &[data-pin='pin-now'] {
      &:before {
        background-color: $theme-primary;
      }
      svg {
        fill: $theme-primary;
      }
    }

    &[data-pin='pin-next'] {
      svg {
        fill: $black;
      }
    }
  }

  &__details {
    position: relative;

    .chevron {
      position: absolute;
      top: 0;
      @include svg-size('right');

      &:hover {
        cursor: pointer;
      }

      &--active {
        transform: rotate(180deg);
      }

      svg {
        @include svg-size('width');
        @include svg-size('height');
        fill: $gray-dark;
      }
    }

    span {
      color: $gray-dark;
      line-height: 1.6;

      @include mq(md) {
        font-size: 1.6rem;
      }
    }
  }

  &__description {
    max-height: 0;
    opacity: 0;
    transition: all 0.35s 0.2s linear;
    overflow: hidden;

    &--active {
      max-height: 100%;
      opacity: 1;
      transition: all 0.35s 0.2s linear;
    }

    svg {
      @include svg-size('width');
      @include svg-size('height');
      margin: 1rem;
      margin-left: 0;
    }
  }
}
